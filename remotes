#!/usr/bin/env php
<?php
require(__DIR__."/SLGTerm/autoload.php");

use SLGTerm\Form;
use SLGTerm\Box;
use SLGTerm\Terminal;
use SLGTerm\Terminal as T;
use SLGTerm\Cursor;
use SLGTerm\TextInput;
use SLGTerm\Label;
use SLGTerm\Button;

return main();


function main() {
    // Save screen and restore at the end.
    $original_cursor_position = Cursor::getPosition();
    Terminal::saveContents();

    $remotes = load_remotes();

    if( !$remotes ) {
       echo "No git remotes on current directory.";
       return 1;
    }

    $app = create_main_form($remotes);

    $app->show();
    $app->focus();

    Terminal::restoreContents();
    Cursor::setPosition($original_cursor_position);

    // This demo does nothing
    // but we can compare data with original and
    // run git to rename remotes or change the urls.

    echo "\n";
    echo "If this where a real app all remotes would have been updated.\n";

    return 0;
}

function load_remotes() {
    // Harcoded for the demo but can be obtained via
    // git remote and git remote get-url
    return [
        ['name'=>'origin', 'url'=>'git@github.com:neitanod/SLGTerm.git'],
        ['name'=>'bitbucket', 'url'=>'git@bitbucket.org:neitanod/SLGTerm.git'],
    ];
}

function set_default_colors($widget) {
    $widget->fgColor256(250)
        ->bgColor256(235)
        ->fgColor("white")
        ->bgColor("black");
}

function set_info_colors($widget) {
    $widget->fgColor256(255)
        ->bgColor256(27)
        ->fgColor("white")
        ->bgColor("blue");
}

function set_success_colors($widget) {
    $widget->fgColor256(255)
        ->bgColor256(64)
        ->fgColor("white")
        ->bgColor("green");
}

function set_danger_colors($widget) {
    $widget->fgColor256(255)
        ->fgColor("white")
        ->bgColor("red");
}

function create_main_form($remotes) {

    $app = new Form();

    $Box = new Box(); // Fullscreen by default
    set_default_colors($Box);

    $app->addWidget($Box); // Use as form background, useful for clean redraws

    $Title = (new Label(" Edit GIT remotes: ", 3, 2));
    set_default_colors($Title);

    $StatusBar = (new Label("", 0, Terminal::rows(), Terminal::cols(), Terminal::cols()));
    set_info_colors($StatusBar);

    $app->on("key", function( $event ) use ($StatusBar) {
        $key = $event->getData('key');
        $StatusBar->setValue("key: ".$key." ".json_encode($event->getData()))
            ->render();
    });

    $app->on("key", function( $event ) {
        $key = $event->getData('key');
        if($key == "<ESC>") {
            $event->getData('controller')->hide();
        }
    });

    $app->on("key", function( $event ) {
        $key = $event->getData('key');
        if($key == "<TAB>") {
            $event->getData('controller')->focusNext();
        } elseif($key == "<HOME>") {
            $event->getData('controller')->focusPrevious();
        }
    });

    $Controls = [];
    $row = 2;

    foreach ($remotes as $remote) {

        $row++;
        $row++;

        $NextControl = (new TextInput( 10, $row))
            ->bgColor("cyan")
            ->width(10);

        $NextControl->setValue($remote['name']);

        $app->addWidget($NextControl);

        $NextControl = (new Label(" Name: ", 3, $row));

        set_default_colors($NextControl);

        $app->addWidget($NextControl);

        $NextControl = (new TextInput( 26, $row))
            ->bgColor("cyan")
            ->width(40);

        $NextControl->setValue($remote['url']);

        $app->addWidget($NextControl);

        $NextControl = (new Label(" URL: ", 20, $row));

        set_default_colors($NextControl);

        $app->addWidget($NextControl);

        $RemoveButton = (new Button(" ðŸ—‘ Delete  ", 70, $row));
        set_danger_colors($RemoveButton);

        $RemoveButton->on("pressed", function($event) use ($app) { echo "DELETING!"; $app->render(); });

        $app->addWidget($RemoveButton);
    }

    $app->addWidget($Title);
    $app->addWidget($StatusBar);

    $CancelButton = (new Button("  Cancel  ", 4, $row+3));
    set_danger_colors($CancelButton);

    $app->addWidget($CancelButton);

    $DoneButton = (new Button("  Done  ", 18, $row+3));
    set_success_colors($DoneButton);

    $app->addWidget($DoneButton);


    return $app;

}
