#!/usr/bin/env php
<?php
require(__DIR__."/SLGTerm/autoload.php");

use SLGTerm\Form;
use SLGTerm\Terminal;
use SLGTerm\Terminal as T;
use SLGTerm\Cursor;
use SLGTerm\Input;
use SLGTerm\TextInput;
use SLGTerm\Label;
use SLGTerm\Spinner;
use SLGTerm\Style;

return main();


function main() {
    // Save screen and restore at the end.
    $original_cursor_position = Cursor::getPosition();
    Terminal::saveContents();

    $app = create_name_form();

    Input::setInterval( function()  { Terminal::echoAt(60,3, date("Y-m-d H:i:s")); }, 200 );
    Input::setInterval( function() use ($app) { $app->spinner->advance(); }, 100 );

    Input::setTimeout( function() { (new Label("Hurry up!",60,5))->style(new Style('yellow', 'red'))->render(); }, 2000 );
    Input::setTimeout( function() use ($app) { $app->hide(); $app->nameField->setValue("slow typer"); }, 3000 );


    // Timers only run while a form has the focus.

    $app->focus();

    $user_name = $app->nameField->getValue();

    Terminal::restoreContents();
    Cursor::setPosition($original_cursor_position);

    echo "Good bye ".$user_name."!!\n";

    return 0;
}


function create_name_form() {

    $app = new Form();

    $app->on("key", function( $event ) {
        $key = $event->getData('key');
        if($key == "<ESC>" || $key == "<ENTER>") {
            $event->getData('controller')->hide();
            // calling hide() will break the loop on next iteration
        }
    });

    $Label1 = (new Label(" You have 3 seconds to type your name: ", 3, 3))
        ->style(new Style("black", "green"));

    $TextInput1 = (new TextInput( 3, 5))
        ->style(new Style("white", "cyan"));
        //->width(25);

    $app->addWidget($TextInput1);
    $app->addWidget($Label1);

    $app->nameField = $TextInput1;

    $app->spinner = new Spinner( 53, 3);
    $app->addWidget($app->spinner);

    add_status_bars($app);

    return $app;

}

function add_status_bars($app) {

    $StatusBar = (new Label("", 0, Terminal::rows(), Terminal::cols(), Terminal::cols()))
        ->style(new Style("black", "green"));

    $StatusBar2 = (new Label("", 0, Terminal::rows()-1, Terminal::cols(), Terminal::cols()))
        ->style(new Style("green", "white"));

    $app->on("key", function( $event ) use ($StatusBar) {
        $key = $event->getData('key');
        $StatusBar->setValue("key: ".$key." ".json_encode($event->getData()))
            ->render();
    });

    $app->nameField->on("input", function( $event ) use ($StatusBar2, $app) {
        $StatusBar2->setValue($event->getData('value'))->render();
        $app->nameField->render();
    });

}

