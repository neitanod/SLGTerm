#!/usr/bin/env php
<?php
require(__DIR__."/SLGTerm/autoload.php");

use SLGTerm\Form;
use SLGTerm\Terminal;
use SLGTerm\Terminal as T;
use SLGTerm\Cursor;
use SLGTerm\TextInput;
use SLGTerm\Input;
use SLGTerm\Text;
use SLGTerm\Label;
use SLGTerm\Spinner;
use SLGTerm\Style;

return main();


function main() {
    // Save screen and restore at the end.
    $original_cursor_position = Cursor::getPosition();
    Terminal::saveContents();
    Cursor::showOnExit();

    $app = create_form();

    // Create a time interval to add lines to the Text element we call "console"
    Input::setInterval(
        function() use ( $app ) {
            $app->console->append(date("Y-m-d H:i:s"));
            if ( $app->autoscroll ) {
                $app->console->moveBottom();
            }
            $app->render();
        } , 1000
    );

    $app->console->append("==================");
    $app->console->append("");
    $app->console->append("Use key <a> to toggle autoscroll (console mode).");
    $app->console->append("Appending one line per second...");

    $app->focus();

    Terminal::restoreContents();
    Cursor::setPosition($original_cursor_position);

    return 0;
}


function create_form() {

    $app = new Form();

    $StatusBar = (new Label("", 0, Terminal::rows(), Terminal::cols(), Terminal::cols()))
        ->style(new Style('black', 'green'));

    $app->on("key", function( $event ) use ($StatusBar) {
        $key = $event->getData('key');
        $StatusBar->setValue("key: ".$key." ".json_encode($event->getData()))
            ->render();
    });

    $app->on("key", function( $event ) {
        $key = $event->getData('key');
        if($key == "<ESC>" || $key == "<ENTER>") {
            $event->getData('controller')->hide();
            // setting exit to true will break the loop on next iteration
        }
    });

    $Label = (new Label(" Contents of loaded file: ", 3, 3));
        // ->style(new Style('black', 'green'));

    $Text = (new Text( 3, 5, intval(Terminal::cols() / 2) - 1, Terminal::rows() - 7 ))
        ->setValue( file(__DIR__."/text") )   // load this very source file and display it
        ->style(new Style('white', 'black', 250, 236))
        ->styleFocused(new Style('yellow', 'black', 253, 241));

    $Label2 = (new Label(" Console: ",  intval(Terminal::cols() / 2) + 3, 3)); // ->style(new Style('black', 'green'));

    $Text2 = (new Text( intval(Terminal::cols() / 2) + 3, 5, intval(Terminal::cols() / 2 ) - 2, Terminal::rows() - 7 ))
        ->style(new Style('white', 'black', 250, 236))
        ->styleFocused(new Style('yellow', 'black', 253, 241));

    $app->addWidget($Label);
    $app->addWidget($Text);
    $app->addWidget($Label2);
    $app->addWidget($Text2);
    $app->addWidget($StatusBar);

    $app->on("key", function( $event ) {
        $key = $event->getData('key');
        if($key == "<TAB>") {
            $event->getData('controller')->focusNext();
        } elseif($key == "<HOME>") {
            $event->getData('controller')->focusPrevious();
        } elseif($key == "a") {
            $event->getData('controller')->autoscroll = !$event->getData('controller')->autoscroll;
        }
    });

    // Create a shortcut reference to the Text element to have it
    // accessible from our app.
    $app->console = $Text2;

    $app->autoscroll = true;

    return $app;

}
